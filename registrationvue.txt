<template>
  <div class="registration-container">
    <div class="registration-background">
      <div class="floating-element element-1"></div>
      <div class="floating-element element-2"></div>
      <div class="floating-element element-3"></div>
      <div class="floating-element element-4"></div>
    </div>
    
    <div class="registration-card">
      <div class="registration-header">
        <div class="logo-container">
          <div class="logo-icon">‚ú®</div>
          <h1 class="registration-title">Join Our Platform</h1>
          <p class="registration-subtitle">Create your abuse moderation account</p>
        </div>
      </div>
      
      <form @submit.prevent="handleRegister" class="registration-form">
        <div class="form-group">
          <label class="form-label">Username</label>
          <div class="input-container">
            <input
              v-model="formData.username"
              type="text"
              placeholder="Choose a unique username"
              class="form-input"
              required
            />
            <div class="input-icon">üë§</div>
          </div>
        </div>
        
        <div class="form-group">
          <label class="form-label">Email Address</label>
          <div class="input-container">
            <input
              v-model="formData.email"
              type="email"
              placeholder="Enter your email address"
              class="form-input"
              required
            />
            <div class="input-icon">üìß</div>
          </div>
        </div>
        
        <div class="form-group">
          <label class="form-label">Password</label>
          <div class="input-container">
            <input
              v-model="formData.password"
              type="password"
              placeholder="Create a strong password"
              class="form-input"
              required
            />
            <div class="input-icon">üîê</div>
          </div>
        </div>
        
        <div class="form-group role-group">
          <label class="form-label">Account Type</label>
          <div class="role-selection">
            <div 
              class="role-card"
              :class="{ active: formData.role === 'user' }"
              @click="formData.role = 'user'"
            >
              <div class="role-icon">üë•</div>
              <div class="role-info">
                <h3>Regular User</h3>
                <p>Create posts and comments</p>
              </div>
              <div class="role-check" v-if="formData.role === 'user'">‚úì</div>
            </div>
            
            <div 
              class="role-card"
              :class="{ active: formData.role === 'moderator' }"
              @click="formData.role = 'moderator'"
            >
              <div class="role-icon">üõ°Ô∏è</div>
              <div class="role-info">
                <h3>Moderator</h3>
                <p>Manage content and users</p>
              </div>
              <div class="role-check" v-if="formData.role === 'moderator'">‚úì</div>
            </div>
          </div>
        </div>
        
        <button type="submit" class="register-button" :disabled="loading">
          <span v-if="loading" class="loading-spinner"></span>
          <span v-else>{{ loading ? 'Creating Account...' : 'Create Account' }}</span>
        </button>
        
        <div v-if="error" class="error-message">
          <div class="error-icon">‚ùå</div>
          {{ error }}
        </div>

        <div class="divider">
          <span>Already have an account?</span>
        </div>

        <router-link to="/login" class="login-link">
          Sign in to your account
        </router-link>
      </form>
    </div>
  </div>
</template>

<script>
import { authAPI } from '@/services/api'

export default {
  name: 'Registration',
  data() {
    return {
      formData: {
        username: '',
        email: '',
        password: '',
        role: 'user'
      },
      loading: false,
      error: ''
    }
  },
  mounted() {
    setTimeout(() => {
      document.querySelector('.registration-card').classList.add('animate-in')
    }, 100)
  },
  methods: {
    async handleRegister() {
      this.loading = true
      this.error = ''
      
      try {
        const response = await authAPI.register(this.formData)
        
        const loginResponse = await authAPI.login({
          username: this.formData.username,
          password: this.formData.password
        })
        
        localStorage.setItem('token', loginResponse.access_token)
        localStorage.setItem('user', JSON.stringify(loginResponse.user))
        
        if (loginResponse.user.role === 'moderator') {
          this.$router.push('/mod-dashboard')
        } else {
          this.$router.push('/feed')
        }
        
      } catch (error) {
        this.error = error.response?.data?.detail || 'Registration failed. Please try again.'
        console.error('Registration error:', error)
      } finally {
        this.loading = false
      }
    }
  }
}
</script>

<style scoped>
.registration-container {
  min-height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 20px;
  position: relative;
  overflow: hidden;
}

.registration-background {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(135deg, #f093fb 0%, #f5576c 50%, #4facfe 100%);
  z-index: -1;
}

.floating-element {
  position: absolute;
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(10px);
  border-radius: 50%;
  animation: floating 8s ease-in-out infinite;
}

.element-1 {
  width: 120px;
  height: 120px;
  top: 15%;
  left: 15%;
  animation-delay: 0s;
}

.element-2 {
  width: 80px;
  height: 80px;
  top: 70%;
  right: 20%;
  animation-delay: 2s;
}

.element-3 {
  width: 160px;
  height: 160px;
  bottom: 10%;
  left: 60%;
  animation-delay: 4s;
}

.element-4 {
  width: 100px;
  height: 100px;
  top: 40%;
  right: 10%;
  animation-delay: 6s;
}

@keyframes floating {
  0%, 100% { 
    transform: translateY(0px) translateX(0px) rotate(0deg);
  }
  25% { 
    transform: translateY(-20px) translateX(10px) rotate(90deg);
  }
  50% { 
    transform: translateY(10px) translateX(-10px) rotate(180deg);
  }
  75% { 
    transform: translateY(-5px) translateX(15px) rotate(270deg);
  }
}

.registration-card {
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(20px);
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: 24px;
  padding: 40px;
  width: 100%;
  max-width: 500px;
  box-shadow: 0 25px 50px rgba(0, 0, 0, 0.15);
  opacity: 0;
  transform: translateY(30px) scale(0.9);
  transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);
}

.registration-card.animate-in {
  opacity: 1;
  transform: translateY(0) scale(1);
}

.registration-header {
  text-align: center;
  margin-bottom: 32px;
}

.logo-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 8px;
}

.logo-icon {
  font-size: 48px;
  margin-bottom: 8px;
  filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.1));
}

.registration-title {
  font-size: 32px;
  font-weight: 700;
  background: linear-gradient(135deg, #f093fb 0%, #f5576c 50%, #4facfe 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  margin: 0;
}

.registration-subtitle {
  color: #7f8c8d;
  font-size: 16px;
  font-weight: 400;
  margin: 8px 0 0 0;
}

.registration-form {
  display: flex;
  flex-direction: column;
  gap: 24px;
}

.form-group {
  position: relative;
}

.form-label {
  display: block;
  font-weight: 600;
  color: #2c3e50;
  margin-bottom: 8px;
  font-size: 14px;
}

.input-container {
  position: relative;
}

.form-input {
  width: 100%;
  padding: 16px 50px 16px 16px;
  border: 2px solid #e9ecef;
  border-radius: 16px;
  font-size: 16px;
  font-family: inherit;
  background: rgba(255, 255, 255, 0.9);
  transition: all 0.3s ease;
}

.form-input:focus {
  outline: none;
  border-color: #f5576c;
  background: rgba(255, 255, 255, 1);
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(245, 87, 108, 0.15);
}

.form-input::placeholder {
  color: #95a5a6;
}

.input-icon {
  position: absolute;
  right: 16px;
  top: 50%;
  transform: translateY(-50%);
  font-size: 16px;
  opacity: 0.6;
  transition: all 0.3s ease;
}

.form-input:focus + .input-icon {
  opacity: 1;
  transform: translateY(-50%) scale(1.1);
}

.role-group {
  margin: 8px 0;
}

.role-selection {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 16px;
  margin-top: 12px;
}

.role-card {
  background: rgba(255, 255, 255, 0.7);
  border: 2px solid #e9ecef;
  border-radius: 16px;
  padding: 20px;
  cursor: pointer;
  transition: all 0.3s ease;
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  position: relative;
  min-height: 120px;
}

.role-card:hover {
  transform: translateY(-4px);
  border-color: #f5576c;
  box-shadow: 0 8px 25px rgba(245, 87, 108, 0.15);
}

.role-card.active {
  border-color: #f5576c;
  background: linear-gradient(135deg, rgba(240, 147, 251, 0.1) 0%, rgba(245, 87, 108, 0.1) 100%);
  transform: translateY(-4px);
  box-shadow: 0 8px 25px rgba(245, 87, 108, 0.2);
}

.role-icon {
  font-size: 32px;
  margin-bottom: 8px;
}

.role-info h3 {
  font-size: 16px;
  font-weight: 600;
  color: #2c3e50;
  margin: 0 0 4px 0;
}

.role-info p {
  font-size: 14px;
  color: #7f8c8d;
  margin: 0;
}

.role-check {
  position: absolute;
  top: 8px;
  right: 8px;
  background: #27ae60;
  color: white;
  width: 24px;
  height: 24px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 14px;
  font-weight: bold;
}

.register-button {
  background: linear-gradient(135deg, #f093fb 0%, #f5576c 50%, #4facfe 100%);
  color: white;
  border: none;
  padding: 16px 24px;
  border-radius: 16px;
  font-size: 16px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  min-height: 56px;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
  margin-top: 8px;
}

.register-button:hover:not(:disabled) {
  transform: translateY(-2px);
  box-shadow: 0 12px 30px rgba(245, 87, 108, 0.4);
}

.register-button:active:not(:disabled) {
  transform: translateY(0);
}

.register-button:disabled {
  opacity: 0.7;
  cursor: not-allowed;
  transform: none;
}

.loading-spinner {
  width: 20px;
  height: 20px;
  border: 2px solid rgba(255, 255, 255, 0.3);
  border-top: 2px solid white;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.error-message {
  color: #e74c3c;
  background: rgba(231, 76, 60, 0.1);
  border: 1px solid rgba(231, 76, 60, 0.2);
  border-radius: 12px;
  padding: 12px 16px;
  font-size: 14px;
  display: flex;
  align-items: center;
  gap: 8px;
  animation: shake 0.5s ease-in-out;
}

.error-icon {
  font-size: 16px;
}

@keyframes shake {
  0%, 100% { transform: translateX(0); }
  25% { transform: translateX(-5px); }
  75% { transform: translateX(5px); }
}

.divider {
  text-align: center;
  position: relative;
  margin: 8px 0;
}

.divider::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 0;
  right: 0;
  height: 1px;
  background: #e9ecef;
}

.divider span {
  background: rgba(255, 255, 255, 0.95);
  padding: 0 16px;
  color: #7f8c8d;
  font-size: 14px;
}

.login-link {
  text-align: center;
  color: #f5576c;
  text-decoration: none;
  font-weight: 600;
  padding: 12px;
  border-radius: 12px;
  transition: all 0.3s ease;
  border: 2px solid transparent;
}

.login-link:hover {
  background: rgba(245, 87, 108, 0.1);
  border-color: rgba(245, 87, 108, 0.2);
  transform: translateY(-2px);
}

/* Responsive Design */
@media (max-width: 600px) {
  .registration-card {
    padding: 30px 20px;
    margin: 20px 10px;
  }
  
  .registration-title {
    font-size: 28px;
  }
  
  .role-selection {
    grid-template-columns: 1fr;
  }
  
  .form-input {
    padding: 14px 40px 14px 14px;
  }
  
  .register-button {
    padding: 14px 20px;
    min-height: 52px;
  }
}